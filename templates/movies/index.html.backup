{% extends 'base.html' %}

{% block title %}Discover Movies - Drama{% endblock %}

{% block content %}
<!-- Top Header for Mobile -->
<div class="top-header">
    <a href="{% url 'accounts:profile' %}" class="profile-pic-small">
        👤
    </a>
    <input type="text" class="header-search" placeholder="Search movies..." id="headerSearch" value="{{ query }}">
    <div class="messenger-icon" onclick="openMessenger()">
        💬
        <div class="messenger-badge">2</div>
    </div>
</div>

<!-- Featured Movies Banner -->
{% if featured_movies and page == 1 %}
<div class="movie-banner">
    <div class="banner-container" id="bannerContainer">
        {% for movie in featured_movies %}
            <div class="banner-slide">
                {% if movie.backdrop_url %}
                    <img src="{{ movie.backdrop_url }}" class="banner-poster" alt="{{ movie.title }}" loading="lazy">
                {% endif %}
                <div class="banner-content">
                    <h2 class="banner-title">{{ movie.title }}</h2>
                    <p class="banner-subtitle">{{ movie.overview|truncatewords:10 }}</p>
                    <div class="banner-rating">
                        <span>⭐ {{ movie.vote_average|floatformat:1 }}</span>
                        <span>•</span>
                        <span>{{ movie.release_date|date:"Y" }}</span>
                    </div>
                    <a href="{% url 'movies:detail' movie.id %}" class="banner-cta">View Details</a>
                </div>
            </div>
        {% endfor %}
    </div>
    <div class="banner-dots" id="bannerDots">
        {% for movie in featured_movies %}
            <div class="banner-dot {% if forloop.first %}active{% endif %}" onclick="goToSlide({{ forloop.counter0 }})"></div>
        {% endfor %}
    </div>
</div>
{% endif %}

<div class="mb-4">
    <div class="text-center mb-3 mt-3">
        <h1 class="game-title" style="font-size: 1.5rem;">🍿 Discover Movies</h1>
        <p class="game-subtitle" style="font-size: 1rem;">Find your next favorite film</p>
    </div>
    
    <!-- Mobile Filter Options -->
    <div class="search-container" style="padding: 1rem; margin-bottom: 1rem;">
        <form method="GET" class="mb-3">
            <div class="row g-2">
                <div class="col-6">
                    <select class="form-control" name="genre" style="font-size: 0.875rem;">
                        <option value="">All Genres</option>
                        <option value="28" {% if genre == "28" %}selected{% endif %}>🎬 Action</option>
                        <option value="35" {% if genre == "35" %}selected{% endif %}>😂 Comedy</option>
                        <option value="18" {% if genre == "18" %}selected{% endif %}>🎭 Drama</option>
                        <option value="27" {% if genre == "27" %}selected{% endif %}>👻 Horror</option>
                        <option value="878" {% if genre == "878" %}selected{% endif %}>🚀 Sci-Fi</option>
                    </select>
                </div>
                <div class="col-6">
                    <input type="number" class="form-control" name="year" placeholder="Year" value="{{ year }}" min="1900" max="2024" style="font-size: 0.875rem;">
                </div>
                <input type="hidden" name="q" value="{{ query }}">
            </div>
            <div class="flex gap-2 mt-2">
                <button type="submit" class="btn btn-primary flex-1" style="font-size: 0.875rem;">Filter</button>
                <a href="?random=1" class="btn btn-secondary" style="font-size: 0.875rem;">🎲 Random</a>
            </div>
        </form>
    </div>
</div>

<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
    {% for movie in movies %}
        <div class="movie-card">
            {% if movie.poster_url %}
                <img src="{{ movie.poster_url }}" class="movie-poster" alt="{{ movie.title }}" loading="lazy">
            {% else %}
                <div class="movie-poster bg-gray-700 flex items-center justify-center">
                    <span class="text-gray-400">🎬</span>
                </div>
            {% endif %}
            <div class="movie-overlay">
                <div class="flex justify-between items-start mb-2">
                    <div class="flex-1">
                        <h3 class="movie-title">{{ movie.title }}</h3>
                        <p class="movie-year">{{ movie.release_date|date:"Y" }} • ⭐ {{ movie.vote_average|floatformat:1 }}</p>
                    </div>
                    {% if user.is_authenticated %}
                        <button class="favorite-btn" onclick="toggleFavorite({{ movie.id }})" data-movie-id="{{ movie.id }}">
                            <span class="heart">🤍</span>
                        </button>
                    {% endif %}
                </div>
                
                <div class="flex gap-2 mt-3">
                    <a href="{% url 'movies:detail' movie.id %}" class="btn btn-primary btn-sm flex-1">
                        👁️ View
                    </a>
                </div>
            </div>
        </div>
    {% empty %}
        <div class="col-span-full">
            <div class="text-center p-8">
                <div class="text-6xl mb-4">🔍</div>
                <h3 class="text-xl font-semibold mb-2">No movies found</h3>
                <p class="text-gray-400 mb-4">Try a different search or browse popular movies</p>
                <a href="?random=1" class="btn btn-primary">🎲 Try Random Movies</a>
            </div>
        </div>
    {% endfor %}
</div>

<!-- Pagination -->
{% if has_previous or has_next %}
<div class="flex justify-center items-center gap-2 mt-8">
    {% if has_previous %}
        <a href="?{% if query %}q={{ query }}&{% endif %}{% if genre %}genre={{ genre }}&{% endif %}{% if year %}year={{ year }}&{% endif %}page={{ page|add:'-1' }}" 
           class="btn btn-secondary">
            ← Previous
        </a>
    {% endif %}
    <span class="px-4 py-2 bg-gray-700 rounded-lg">
        Page {{ page }}
    </span>
    {% if has_next %}
        <a href="?{% if query %}q={{ query }}&{% endif %}{% if genre %}genre={{ genre }}&{% endif %}{% if year %}year={{ year }}&{% endif %}page={{ page|add:'1' }}" 
           class="btn btn-secondary">
            Next →
        </a>
    {% endif %}
</div>
{% endif %}

{% csrf_token %}
<script>

async function toggleFavorite(movieId) {
    try {
        const response = await fetch(`/movies/api/movies/${movieId}/toggle-favorite/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
            }
        });
        
        const data = await response.json();
        const heartIcon = document.querySelector(`[data-movie-id="${movieId}"] .heart`);
        
        if (data.is_favorite) {
            heartIcon.textContent = '❤️';
            heartIcon.parentElement.style.transform = 'scale(1.2)';
            setTimeout(() => {
                heartIcon.parentElement.style.transform = 'scale(1)';
            }, 200);
        } else {
            heartIcon.textContent = '🤍';
        }
    } catch (error) {
        console.error('Error toggling favorite:', error);
    }
}

// Header search functionality
document.addEventListener('DOMContentLoaded', function() {
    const headerSearch = document.getElementById('headerSearch');
    if (headerSearch) {
        headerSearch.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                const searchValue = this.value.trim();
                if (searchValue) {
                    window.location.href = `{% url 'movies:index' %}?q=${encodeURIComponent(searchValue)}`;
                } else {
                    window.location.href = `{% url 'movies:index' %}`;
                }
            }
        });
    }
});

// Messenger functionality
function openMessenger() {
    // For now, just show an alert - in real app would open messaging interface
    alert('Messages feature coming soon! 💬');
}

// Banner functionality
let currentSlide = 0;
let totalSlides = 0;
let bannerInterval;
let startX = 0;
let currentX = 0;
let isDragging = false;

document.addEventListener('DOMContentLoaded', function() {
    const banner = document.getElementById('bannerContainer');
    const dots = document.getElementById('bannerDots');
    
    if (!banner) return;
    
    totalSlides = banner.children.length;
    
    if (totalSlides > 1) {
        // Auto-scroll every 4 seconds
        startAutoScroll();
        
        // Touch/swipe events
        banner.addEventListener('touchstart', handleTouchStart, { passive: true });
        banner.addEventListener('touchmove', handleTouchMove, { passive: true });
        banner.addEventListener('touchend', handleTouchEnd, { passive: true });
        
        // Mouse events for desktop testing
        banner.addEventListener('mousedown', handleMouseStart);
        banner.addEventListener('mousemove', handleMouseMove);
        banner.addEventListener('mouseup', handleMouseEnd);
        banner.addEventListener('mouseleave', handleMouseEnd);
        
        // Pause auto-scroll on hover/touch
        banner.addEventListener('mouseenter', stopAutoScroll);
        banner.addEventListener('mouseleave', startAutoScroll);
        banner.addEventListener('touchstart', stopAutoScroll);
        banner.addEventListener('touchend', () => {
            setTimeout(startAutoScroll, 3000); // Resume after 3s
        });
    }
});

function handleTouchStart(e) {
    startX = e.touches[0].clientX;
    isDragging = true;
}

function handleTouchMove(e) {
    if (!isDragging) return;
    currentX = e.touches[0].clientX;
}

function handleTouchEnd(e) {
    if (!isDragging) return;
    
    const diffX = startX - currentX;
    const threshold = 50; // Minimum swipe distance
    
    if (Math.abs(diffX) > threshold) {
        if (diffX > 0) {
            nextSlide();
        } else {
            prevSlide();
        }
    }
    
    isDragging = false;
}

function handleMouseStart(e) {
    startX = e.clientX;
    isDragging = true;
    e.preventDefault();
}

function handleMouseMove(e) {
    if (!isDragging) return;
    currentX = e.clientX;
    e.preventDefault();
}

function handleMouseEnd(e) {
    if (!isDragging) return;
    
    const diffX = startX - currentX;
    const threshold = 50;
    
    if (Math.abs(diffX) > threshold) {
        if (diffX > 0) {
            nextSlide();
        } else {
            prevSlide();
        }
    }
    
    isDragging = false;
}

function goToSlide(index) {
    currentSlide = index;
    updateBanner();
}

function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    updateBanner();
}

function prevSlide() {
    currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
    updateBanner();
}

function updateBanner() {
    const banner = document.getElementById('bannerContainer');
    const dots = document.querySelectorAll('.banner-dot');
    
    if (banner) {
        banner.style.transform = `translateX(-${currentSlide * 100}%)`;
    }
    
    // Update dots
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentSlide);
    });
}

function startAutoScroll() {
    if (totalSlides > 1) {
        bannerInterval = setInterval(nextSlide, 4000);
    }
}

function stopAutoScroll() {
    if (bannerInterval) {
        clearInterval(bannerInterval);
        bannerInterval = null;
    }
}
</script>
{% endblock %}